// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bcsg.trapfields.web;

import com.bcsg.trapfields.domain.BlockedIp;
import com.bcsg.trapfields.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<BlockedIp, String> ApplicationConversionServiceFactoryBean.getBlockedIpToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.bcsg.trapfields.domain.BlockedIp, java.lang.String>() {
            public String convert(BlockedIp blockedIp) {
                return new StringBuilder().append(blockedIp.getIpAddress()).toString();
            }
        };
    }
    
    public Converter<Long, BlockedIp> ApplicationConversionServiceFactoryBean.getIdToBlockedIpConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.bcsg.trapfields.domain.BlockedIp>() {
            public com.bcsg.trapfields.domain.BlockedIp convert(java.lang.Long id) {
                return BlockedIp.findBlockedIp(id);
            }
        };
    }
    
    public Converter<String, BlockedIp> ApplicationConversionServiceFactoryBean.getStringToBlockedIpConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.bcsg.trapfields.domain.BlockedIp>() {
            public com.bcsg.trapfields.domain.BlockedIp convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BlockedIp.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBlockedIpToStringConverter());
        registry.addConverter(getIdToBlockedIpConverter());
        registry.addConverter(getStringToBlockedIpConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
